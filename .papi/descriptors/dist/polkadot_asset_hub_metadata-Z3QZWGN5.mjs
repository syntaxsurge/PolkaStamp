import './chunk-7P6ASYW6.mjs'

// .papi/descriptors/src/polkadot_asset_hub_metadata.ts
var binMeta =
  ''
var polkadot_asset_hub_metadata_default = binMeta
export { polkadot_asset_hub_metadata_default as default }

import './chunk-7P6ASYW6.mjs'

// .papi/descriptors/src/pop_metadata.ts
var binMeta =
  ''
var pop_metadata_default = binMeta
export { pop_metadata_default as default }
